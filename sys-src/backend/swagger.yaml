openapi: 3.0.0
info:
    title: FireForceDefense
    description: A Tower-Defense Game.
    version: 1.0.0

paths:
    /accounts/login:
        post:
            tags:
                - Accounts
            summary: Log in an user account
            description: Log in an user account.
            operationId: login
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    example: 'max@muster.com'
                                password:
                                    type: string
                                    example: 'pass123'
                            required:
                                - email
                                - password
            responses:
                '200':
                    description: Account details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: string
                                        example: '1'
                                    username:
                                        type: string
                                        example: 'maxmuster'
                                    email:
                                        type: string
                                        example: 'max@muster.com'
    /accounts/register:
        post:
            tags:
                - Accounts
            summary: Register a new user account
            description: Register a new user account.
            operationId: register
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                    example: 'maxmuster'
                                email:
                                    type: string
                                    example: 'max@muster.com'
                                password:
                                    type: string
                                    example: 'pass123'
                                confirmPassword:
                                    type: string
                                    example: 'pass123'
                            required:
                                - username
                                - email
                                - password
                                - confirmPassword
            responses:
                '200':
                    description: The registration request was successful.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: 'Registration successful'
    /accounts/refresh-token:
        post:
            tags:
                - Accounts
            summary: Generate a new access- and refresh-token
            description: Generate a new access- and refresh-token.
            operationId: refreshToken
            parameters:
                - in: cookie
                  name: refreshToken
                  description: Refresh Token
                  schema:
                      type: string
                      example: w63tv4c6r86btb7uw5s1424db4cf5afd16a5hby53rkvc7uv1h6eg
            responses:
                '200':
                    description: Account details, a JWT access token and a new refresh token cookie
                    headers:
                        Set-Cookie:
                            description: '`refreshToken`'
                            schema:
                                type: string
                                example: refreshToken=w63tv4c6r86btb7uw5s1424db4cf5afd16a5hby53rkvc7uv1h6eg; Path=/; Expires=Tue, 24 Dec 2025 23:59:59 GMT; HttpOnly
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: string
                                        example: '1'
                                    username:
                                        type: string
                                        example: 'maxmuster'
                                    email:
                                        type: string
                                        example: 'max@muster.com'
                                    jwtToken:
                                        type: string
                                        example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWIxMmUxOTdlMDZhNzZjY2RlZmMxMjEiLCJpZCI6IjVlYjEyZTE5N2UwNmE3NmNjZGVmYzEyMSIsImlhdCI6MTU4ODc1ODE1N30.xR9H0STbFOpSkuGA9jHNZOJ6eS7umHHqKRhI807YT1Y'
                '400':
                    description: Refresh token is invalid, revoked or expired
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: 'Invalid token'
    /accounts/revoke-token:
        post:
            tags:
                - Accounts
            summary: Revoke a refresh token
            description: Revoke a refresh token.
            operationId: revokeToken
            parameters:
                - in: cookie
                  name: refreshToken
                  description: Refresh Token
                  schema:
                      type: string
                      example: 51872eca5efedcf424db4cf5afd16a9d00ad25b743a034c9c221afc85d18dcd5e4ad6e3f08607550
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                token:
                                    type: string
                                    example: 'w63tv4c6r86btb7uw5s1424db4cf5afd16a5hby53rkvc7uv1h6eg'
            responses:
                '200':
                    description: The refresh token was successfully revoked.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: 'Token revoked'
                '400':
                    description: The refresh token is invalid.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: 'Invalid token'

    /accounts/{id}:
        parameters:
            - in: path
              name: id
              description: Account id
              required: true
              example: '1'
              schema:
                  type: string
        get:
            tags:
                - Accounts
            summary: Get an account by id
            description: Get an account by id
            operationId: getAccountById
            responses:
                '200':
                    description: Details of the specified account
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: string
                                        example: '1'
                                    username:
                                        type: string
                                        example: 'maxmuster'
                                    email:
                                        type: string
                                        example: 'max@muster.com'
                '404':
                    $ref: '#/components/responses/NotFoundError'
        delete:
            tags:
                - Accounts
            summary: Delete an account by id
            description: Delete an account by id
            operationId: deleteAccount
            responses:
                '200':
                    description: Account deleted successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: 'Account deleted successfully'
                '404':
                    $ref: '#/components/responses/NotFoundError'

    /game/score/{username}:
        parameters:
            - in: path
              name: username
              description: Username
              required: true
              example: 'maxmuster'
              schema:
                  type: string
        get:
            tags:
                - Game
            summary: Get scores by username
            description: Get scores by username. The numbers represent the achieved stars.
            operationId: getScoresByUsername
            responses:
                '200':
                    description: Details of scores
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    _id:
                                        type: string
                                        example: 'maxmuster'
                                    username:
                                        type: string
                                        example: 'maxmuster'
                                    scores:
                                        type: object
                                        properties:
                                            lvl101:
                                                type: integer
                                                example: 1
                                            lvl102:
                                                type: integer
                                                example: 3
                '404':
                    $ref: '#/components/responses/NotFoundError'
    /game/score:
        post:
            tags:
                - Game
            summary: Saves new Score data
            description: Saves new Score data.
            operationId: saveScores
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                    example: 'maxmuster'
                                level:
                                    type: string
                                    example: 'lvl001'
                                stars:
                                    type: integer
                                    example: 2
                                money:
                                    type: integer
                                    example: 300
                                burnedFields:
                                    type: integer
                                    example: 22
                                time:
                                    type: integer
                                    example: 300
                            required:
                                - username
                                - level
                                - stars
                                - money
                                - burnedFields
                                - time
            responses:
                '200':
                    description: Score details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    scoreData:
                                        type: object
                                        properties:
                                            username:
                                                type: string
                                                example: 'maxmuster'
                                            level:
                                                type: string
                                                example: 'lvl001'
                                            stars:
                                                type: integer
                                                example: 2
                                            money:
                                                type: integer
                                                example: 300
                                            burnedFields:
                                                type: integer
                                                example: 22
                                            time:
                                                type: integer
                                                example: 300
                                            createdAt:
                                                type: string
                                                example: '2021-06-20T14:47:03.699+00:00'
                                            updatedAt:
                                                type: string
                                                example: '2021-06-20T14:47:03.699+00:00'
                                    message:
                                        type: string
                                        example: 'Old data updated'
    /game/scoreboard:
        get:
            tags:
                - Game
            summary: Gets data for scoreboard
            description: Gets data for scoreboard
            operationId: getScoreBoard
            responses:
                '200':
                    description: Scoreboard data
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        _id:
                                            type: string
                                            example: 'maxmuster'
                                        username:
                                            type: string
                                            example: 'maxmuster'
                                        stars:
                                            type: integer
                                            example: 3
                                        time:
                                            type: integer
                                            example: 33
                                        money:
                                            type: integer
                                            example: 300
                                        burnedFields:
                                            type: integer
                                            example: 11
                '404':
                    $ref: '#/components/responses/NotFoundError'

components:
    responses:
        NotFoundError:
            description: Not Found
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                example: 'Not Found'
